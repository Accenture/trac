/*
 * Copyright 2020 Accenture Global Solutions Limited
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


static def getVersionFromGit() {

    def osName = System.properties.getProperty('os.name').toLowerCase()
    def command = osName.contains("win")
        ? "powershell -ExecutionPolicy Bypass -File dev\\version.ps1"
        : "dev/version.sh"

    def versionNumber = command.execute().text.strip()

    println("TRAC Version: ${versionNumber}")

    return versionNumber
}


def addVersionInfo(SourceSet sourceSet, String serviceName) {

    def propsFileDir = "${project.buildDir}/generated/versionInfo/resources"

    task generateVersionInfo {

        def props = new Properties()
        props.setProperty("trac.component.name", serviceName)
        props.setProperty("trac.component.version", "${project.version}")

        def propsFilePath = "${propsFileDir}/version.properties"
        def propsFile = file(propsFilePath)
        propsFile.parentFile.mkdirs()
        propsFile.withWriter { props.store(it, null) }
    }

    sourceSet.resources {
        srcDir propsFileDir
    }

    tasks.getByName(sourceSet.getProcessResourcesTaskName())
         .dependsOn("generateVersionInfo")

    jar {
        manifest.attributes(
            'Implementation-Title': serviceName,
            'Implementation-Version': "${project.version}")
    }
}


ext {
    addVersionInfo = { SourceSet sourceSet, String name -> this.addVersionInfo(sourceSet, name) }
    getVersionFromGit = { -> getVersionFromGit() }
}
