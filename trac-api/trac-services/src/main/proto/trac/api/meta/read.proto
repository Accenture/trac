/*
 * Copyright 2020 Accenture Global Solutions Limited
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";
package trac.api.meta;

option java_package = "com.accenture.trac.common.api.meta";
option java_multiple_files = true;

import "trac/metadata/type.proto";
import "trac/metadata/object.proto";
import "trac/metadata/tag.proto";

import "google/api/annotations.proto";


service MetadataReadApi {

    rpc loadTag(MetadataReadRequest) returns (trac.metadata.Tag) {
        option (google.api.http) = {
            get: "/{tenant}/{objectType}/{objectId}/versions/{objectVersion}/tags/{tagVersion}"
        };
    }

    rpc loadLatestTag(MetadataReadRequest) returns (trac.metadata.Tag) {
        option (google.api.http) = {
            get: "/{tenant}/{objectType}/{objectId}/versions/{objectVersion}/tags/latest{tagVersion=0}"
        };
    }

    rpc loadLatestObject(MetadataReadRequest) returns (trac.metadata.Tag) {
        option (google.api.http) = {
            get: "/{tenant}/{objectType}/{objectId}/versions/latest{objectVersion=0}/tags/latest{tagVersion=0}"
        };
    }

};


message MetadataReadRequest {

    string tenant = 1;

    trac.metadata.ObjectType objectType = 2;
    trac.metadata.UUID objectId = 3;
    int32 objectVersion = 4;
    int32 tagVersion = 5;
};
